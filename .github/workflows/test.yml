name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry==1.8.3

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project false

    - name: Install dependencies
      run: poetry install --with dev,test

    - name: Run linting
      run: |
        poetry run black --check --diff fynx tests
        poetry run isort --check-only --diff fynx tests
        poetry run mypy fynx

    - name: Run tests
      run: poetry run pytest

    - name: Run tests with coverage
      run: poetry run pytest --cov=fynx --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
